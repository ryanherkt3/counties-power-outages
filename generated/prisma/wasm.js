
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.3
 * Query Engine version: bb420e667c1820a8c05a38023385f6cc7ef8e83a
 */
Prisma.prismaVersion = {
  client: "6.16.3",
  engine: "bb420e667c1820a8c05a38023385f6cc7ef8e83a"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.NotificationsScalarFieldEnum = {
  location: 'location',
  lat: 'lat',
  lng: 'lng',
  email: 'email',
  datesubscribed: 'datesubscribed',
  id: 'id',
  outageinfo: 'outageinfo'
};

exports.Prisma.OutagesScalarFieldEnum = {
  id: 'id',
  projecttype: 'projecttype',
  shutdowndatetime: 'shutdowndatetime',
  shutdowndate: 'shutdowndate',
  shutdownperiodstart: 'shutdownperiodstart',
  shutdownperiodend: 'shutdownperiodend',
  feeder: 'feeder',
  affectedcustomers: 'affectedcustomers',
  lat: 'lat',
  lng: 'lng',
  distance: 'distance',
  hull: 'hull',
  address: 'address',
  statustext: 'statustext',
  latestinformation: 'latestinformation',
  originalshutdowndate: 'originalshutdowndate',
  originalshutdownperiodstart: 'originalshutdownperiodstart',
  originalshutdownperiodend: 'originalshutdownperiodend',
  lastmodified: 'lastmodified'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};


exports.Prisma.ModelName = {
  notifications: 'notifications',
  outages: 'outages'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "C:\\Users\\ryzys\\Documents\\SW Projects\\counties-power-outages\\generated\\prisma",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "windows",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "C:\\Users\\ryzys\\Documents\\SW Projects\\counties-power-outages\\prisma\\schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": "../../.env",
    "schemaEnvPath": "../../.env"
  },
  "relativePath": "../../prisma",
  "clientVersion": "6.16.3",
  "engineVersion": "bb420e667c1820a8c05a38023385f6cc7ef8e83a",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "postinstall": false,
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "generator client {\n  provider = \"prisma-client-js\"\n  output   = \"../generated/prisma\"\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n\nmodel notifications {\n  location       String  @db.VarChar(255)\n  lat            Float?\n  lng            Float?\n  email          String\n  datesubscribed String  @db.VarChar(255)\n  id             String  @id @default(dbgenerated(\"nextval('notifications_id_seq'::regclass)\")) @db.VarChar(16)\n  outageinfo     String? @db.VarChar(700)\n}\n\nmodel outages {\n  id                          String    @id @db.VarChar(20)\n  projecttype                 String?   @db.VarChar(50)\n  shutdowndatetime            String?   @db.VarChar(50)\n  shutdowndate                DateTime? @db.Date\n  shutdownperiodstart         String?   @db.VarChar(50)\n  shutdownperiodend           String?   @db.VarChar(50)\n  feeder                      String?   @db.VarChar(50)\n  affectedcustomers           Int?\n  lat                         Decimal?  @db.Decimal\n  lng                         Decimal?  @db.Decimal\n  distance                    Decimal?  @db.Decimal\n  hull                        String?   @db.VarChar(1200)\n  address                     String?   @db.VarChar(400)\n  statustext                  String?   @db.VarChar(400)\n  latestinformation           String?   @db.VarChar(400)\n  originalshutdowndate        DateTime? @db.Date\n  originalshutdownperiodstart String?   @db.VarChar(50)\n  originalshutdownperiodend   String?   @db.VarChar(50)\n  lastmodified                String?   @db.VarChar(400)\n\n  @@unique([id, lastmodified], map: \"constraint_1\")\n}\n",
  "inlineSchemaHash": "211c9d77b40d7a5c8ad42b95cff7176655f05eeff965a8fa9cc09808df3366c0",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"notifications\":{\"fields\":[{\"name\":\"location\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"lat\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"lng\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"datesubscribed\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"outageinfo\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":null},\"outages\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"projecttype\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"shutdowndatetime\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"shutdowndate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"shutdownperiodstart\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"shutdownperiodend\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"feeder\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"affectedcustomers\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"lat\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"lng\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"distance\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"hull\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"address\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"statustext\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"latestinformation\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"originalshutdowndate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"originalshutdownperiodstart\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"originalshutdownperiodend\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"lastmodified\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

